% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_values.R
\name{predict_quality}
\alias{predict_quality}
\title{Apply scoring models for predictions}
\usage{
predict_quality(model, data, store = FALSE, name = "filename.csv")
}
\arguments{
\item{model}{A string telling which scoring model to use.
Options are:
'rb_mod1', 'rb_mod2', or 'rb_mod3' for ReaderBench files to generate holistic quality,
'coh_mod1', 'coh_mod2', or 'coh_mod3' for Coh-Metrix files to generate holistic quality,
and 'gamet_cws1' to generate Correct Word Sequences (CWS)
and Correct Minus Incorrect Word Sequences (CIWS) scores from a GAMET file.}

\item{data}{The name of the R object corresponding to the data file. The
\code{\link{import_gamet}}import_gamet(), \code{\link{import_coh}}import_coh(), or
\code{\link{import_rb}}import_rb()
functions should be used before this function
to generate these data objects.}

\item{store}{When store = TRUE, this function will generate scores, merge
the scores into the data file, and export the file as .csv in the
working directory. When store = FALSE (the default) the predicted scores
are returned to a user-specified object or the R console.}

\item{name}{When store = TRUE, the name parameter gives the filename for
the .csv file (for example, "filename.csv") that is
generated to the working directory.}
}
\value{
Depending on the model parameter option selected, predicted quality (or CWS/CIWS scores)
and the ID variable (parsed from the file names used when generating the ReaderBench, Coh-Metrix,
and/or GAMET output files) are returned.
}
\description{
Apply scoring models to ReaderBench, CohMetrix, and/or
GAMET files. Holistic writing quality can be
generated from Readerbench (model = 'rb_mod1') or
Coh-Metrix files (model = 'coh_mod1'). Also,
Correct Word Sequences and Correct Minus Incorrect
Word Sequences can be generated from a combined
Readerbench and GAMET file.
}
\examples{
###Examples using sample data included in writeAlizer package

##Example 1: ReaderBench output file
#load package
library(writeAlizer)

#get path of sample ReaderBench output file
file_path1 <- system.file("extdata", "sample_rb.csv", package = "writeAlizer")

#see path to sample file
file_path1

#import file and store as "rb_file"
rb_file <- import_rb(file_path1)

#Generate holistic quality from "rb_file"
#and return scores to an object called "rb_quality":
rb_quality <- predict_quality('rb_mod1', rb_file, store = FALSE)

#display quality scores
rb_quality

##Example 2: Coh-Metrix output file
#get path of sample Coh-Metrix output file
file_path2 <- system.file("extdata", "sample_coh.csv", package = "writeAlizer")

#see path to sample file
file_path2

#import file and store as "coh_file"
coh_file <- import_coh(file_path2)

#Generate holistic quality from a Coh-Metrix file (coh_file),
#return scores to an object called "coh_quality", merge
#predicted scores with the data file, and store data as "output.csv" in the
#working directory
coh_quality <- predict_quality('coh_mod1', coh_file, store = TRUE, name = "output.csv")

#display quality scores
coh_quality

##Example 3: GAMET output file
#get path of sample GAMET output file
file_path3 <- system.file("extdata", "sample_gamet.csv", package = "writeAlizer")

#see path to sample GAMET file
file_path3

#import files, merge, and store as "rb_gam_file"
gam_file <- import_gamet(file_path3)

#Generate CWS and CIWS scores from a GAMET file
#(gam_file) and return scores to an object called "gamet_CWS_CIWS"
gamet_CWS_CIWS <- predict_quality('gamet_cws1', gam_file, store = FALSE)

#display quality scores
gamet_CWS_CIWS
}
\seealso{
\code{\link{import_rb}}
\code{\link{import_coh}}
\code{\link{import_gamet}}
}
\author{
Sterett H. Mercer <sterett.mercer@ubc.ca>
}
